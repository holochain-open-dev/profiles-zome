{"version":3,"file":"hc-profiles.es5.js","sources":["../src/bindings.ts","../src/graphql/schema.ts","../src/graphql/resolvers.ts","../src/graphql/queries.ts","../src/elements/hcpf-set-username.ts","../src/profiles.module.ts"],"sourcesContent":["export const ProfilesBindings = {\n  ProfilesProvider: \"holochain-profiles-provider\"\n};\n","import gql from 'graphql-tag';\n\nexport const profilesTypeDefs = gql`\n  type Agent {\n    id: ID!\n    username: String\n  }\n\n  type Me {\n    id: ID!\n    agent: Agent!\n  }\n\n  extend type Query {\n    allAgents: [Agent!]!\n    me: Me!\n  }\n\n  extend type Mutation {\n    setUsername(username: String!): Agent!\n  }\n`;\n","import { HolochainProvider } from '@uprtcl/holochain-provider';\n\nimport { ProfilesBindings } from '../bindings';\nimport { ApolloClientModule } from '@uprtcl/graphql';\nimport { ApolloClient, gql } from 'apollo-boost';\n\nexport const resolvers = {\n  Query: {\n    async allAgents(_, __, { container }) {\n      const profilesProvider: HolochainProvider = container.get(\n        ProfilesBindings.ProfilesProvider\n      );\n\n      const allAgents = await profilesProvider.call('get_all_agents', {});\n      return allAgents.map((agent) => ({\n        id: agent.agent_id,\n        username: agent.username,\n      }));\n    },\n    async me(_, __, { container }) {\n      const profilesProvider: HolochainProvider = container.get(\n        ProfilesBindings.ProfilesProvider\n      );\n\n      const address = await profilesProvider.call('get_my_address', {});\n      return { id: address };\n    },\n  },\n  Me: {\n    agent(parent) {\n      return { id: parent.id };\n    },\n  },\n  Agent: {\n    id(parent) {\n      return parent.id;\n    },\n    username(parent, _, { container, cache }) {\n      if (parent.username) return parent.username;\n\n      const cachedAgent = cache['data'].data[parent.id];\n      if (cachedAgent && cachedAgent.username) return cachedAgent.username;\n\n      const profilesProvider: HolochainProvider = container.get(\n        ProfilesBindings.ProfilesProvider\n      );\n\n      return profilesProvider.call('get_username', {\n        agent_address: parent.id,\n      });\n    },\n  },\n  Mutation: {\n    async setUsername(_, { username }, { container }) {\n      const profilesProvider: HolochainProvider = container.get(\n        ProfilesBindings.ProfilesProvider\n      );\n\n      const agent = await profilesProvider.call('set_username', { username });\n      return {\n        id: agent.agent_id,\n        username,\n      };\n    },\n  },\n};\n","import gql from 'graphql-tag';\n\nexport const SET_USERNAME = gql`\n  mutation SetUsername($username: String!) {\n    setUsername(username: $username) {\n      id\n      username\n    }\n  }\n`;\n\nexport const GET_ALL_AGENTS = gql`\n  query GetAllAgents {\n    allAgents {\n      id\n      username\n    }\n  }\n`","import { moduleConnect } from '@uprtcl/micro-orchestrator';\nimport { LitElement, css, html, query, property } from 'lit-element';\nimport { classMap } from 'lit-html/directives/class-map';\nimport { ApolloClient } from 'apollo-boost';\nimport { ApolloClientModule } from '@uprtcl/graphql';\n\nimport { TextField } from '@material/mwc-textfield';\nimport '@material/mwc-button';\nimport { SET_USERNAME } from '../graphql/queries';\n\nexport class SetUsername extends moduleConnect(LitElement) {\n  @query('#username-field')\n  usernameField!: TextField;\n\n  @property({ type: Number })\n  usernameMinLength: number = 3;\n\n  existingUsernames = {};\n\n  client!: ApolloClient<any>;\n\n  firstUpdated() {\n    this.client = this.request(ApolloClientModule.bindings.Client);\n\n    this.usernameField.validityTransform = (newValue) => {\n      this.requestUpdate();\n      if (newValue.length < this.usernameMinLength) {\n        this.usernameField.setCustomValidity(\n          `Username is too shot, min. ${this.usernameMinLength} characters`\n        );\n        return {\n          valid: false,\n        };\n      } else if (this.existingUsernames[newValue]) {\n        this.usernameField.setCustomValidity('This username already exists');\n        return { valid: false };\n      }\n\n      return {\n        valid: true,\n      };\n    };\n  }\n\n  static get styles() {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n      }\n      .column {\n        display: flex;\n        flex-direction: column;\n      }\n      .small-margin {\n        margin-top: 6px;\n      }\n      .big-margin {\n        margin-top: 23px;\n      }\n    `;\n  }\n\n  async setUsername() {\n    const username = this.usernameField.value;\n    try {\n      await this.client.mutate({\n        mutation: SET_USERNAME,\n        variables: {\n          username,\n        },\n      });\n\n      this.dispatchEvent(\n        new CustomEvent('username-set', {\n          detail: { username },\n          bubbles: true,\n          composed: true,\n        })\n      );\n    } catch (e) {\n      this.existingUsernames[username] = true;\n      this.usernameField.reportValidity();\n    }\n  }\n\n  render() {\n    return html`\n      <div class=\"column\">\n        <mwc-textfield\n          id=\"username-field\"\n          outlined\n          @input=${() => this.usernameField.reportValidity()}\n        ></mwc-textfield>\n        <mwc-button\n          raised\n          class=${classMap({\n            'small-margin': !!this.usernameField,\n            'big-margin': !this.usernameField,\n          })}\n          .disabled=${!this.usernameField || !this.usernameField.validity.valid}\n          label=\"SET USERNAME\"\n          @click=${() => this.setUsername()}\n        ></mwc-button>\n      </div>\n    `;\n  }\n}\n","import { interfaces } from 'inversify';\nimport { GraphQlSchemaModule } from '@uprtcl/graphql';\nimport { MicroModule, i18nextModule } from '@uprtcl/micro-orchestrator';\nimport {\n  HolochainConnectionModule,\n  createHolochainProvider,\n} from '@uprtcl/holochain-provider';\n\nimport en from './i18n/en.json';\nimport { ProfilesBindings } from './bindings';\nimport { profilesTypeDefs } from './graphql/schema';\nimport { resolvers } from './graphql/resolvers';\nimport { SetUsername } from './elements/hcpf-set-username';\n\nexport class ProfilesModule extends MicroModule {\n  static id = 'holochain-profile-module';\n\n  dependencies = [HolochainConnectionModule.id];\n\n  static bindings = ProfilesBindings;\n\n  constructor(protected instance: string) {\n    super();\n  }\n\n  async onLoad(container: interfaces.Container) {\n    const profilesProvider = createHolochainProvider(this.instance, 'profiles');\n\n    container.bind(ProfilesBindings.ProfilesProvider).to(profilesProvider);\n\n    customElements.define('hcpf-set-username', SetUsername);\n  }\n\n  get submodules() {\n    return [\n      new GraphQlSchemaModule(profilesTypeDefs, resolvers),\n      new i18nextModule('profiles', { en: en }),\n    ];\n  }\n}\n"],"names":[],"mappings":"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"}